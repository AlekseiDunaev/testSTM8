                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Mac OS X x86_64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TIM4_OVERLOAD
                                     12 	.globl _main
                                     13 	.globl _ILI9341_Write_Data
                                     14 	.globl _ILI9341_Write_Command
                                     15 	.globl _ILI9341_Init_Display
                                     16 	.globl _ILI9341_setup
                                     17 	.globl _TIM4_ClearITPendingBit
                                     18 	.globl _TIM4_ITConfig
                                     19 	.globl _TIM4_Cmd
                                     20 	.globl _TIM4_TimeBaseInit
                                     21 	.globl _TIM4_DeInit
                                     22 	.globl _SPI_Cmd
                                     23 	.globl _SPI_Init
                                     24 	.globl _SPI_DeInit
                                     25 	.globl _GPIO_ReadInputPin
                                     26 	.globl _GPIO_WriteReverse
                                     27 	.globl _GPIO_Init
                                     28 	.globl _GPIO_DeInit
                                     29 	.globl _CLK_GetFlagStatus
                                     30 	.globl _CLK_SYSCLKConfig
                                     31 	.globl _CLK_HSIPrescalerConfig
                                     32 	.globl _CLK_ClockSwitchConfig
                                     33 	.globl _CLK_PeripheralClockConfig
                                     34 	.globl _CLK_ClockSwitchCmd
                                     35 	.globl _CLK_LSICmd
                                     36 	.globl _CLK_HSICmd
                                     37 	.globl _CLK_HSECmd
                                     38 	.globl _CLK_DeInit
                                     39 	.globl _count
                                     40 	.globl _status
                                     41 	.globl _delay
                                     42 	.globl _clock_setup
                                     43 	.globl _GPIO_setup
                                     44 	.globl _SPI_setup
                                     45 	.globl _TIM4_setup
                                     46 ;--------------------------------------------------------
                                     47 ; ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DATA
                                     50 ;--------------------------------------------------------
                                     51 ; ram data
                                     52 ;--------------------------------------------------------
                                     53 	.area INITIALIZED
      000000                         54 _status::
      000000                         55 	.ds 1
      000001                         56 _count::
      000001                         57 	.ds 2
                                     58 ;--------------------------------------------------------
                                     59 ; Stack segment in internal ram 
                                     60 ;--------------------------------------------------------
                                     61 	.area	SSEG
      000000                         62 __start__stack:
      000000                         63 	.ds	1
                                     64 
                                     65 ;--------------------------------------------------------
                                     66 ; absolute external ram data
                                     67 ;--------------------------------------------------------
                                     68 	.area DABS (ABS)
                                     69 
                                     70 ; default segment ordering for linker
                                     71 	.area HOME
                                     72 	.area GSINIT
                                     73 	.area GSFINAL
                                     74 	.area CONST
                                     75 	.area INITIALIZER
                                     76 	.area CODE
                                     77 
                                     78 ;--------------------------------------------------------
                                     79 ; interrupt vector 
                                     80 ;--------------------------------------------------------
                                     81 	.area HOME
      000000                         82 __interrupt_vect:
      000000 82v00u00u00             83 	int s_GSINIT ; reset
      000004 82 00 00 00             84 	int 0x000000 ; trap
      000008 82 00 00 00             85 	int 0x000000 ; int0
      00000C 82 00 00 00             86 	int 0x000000 ; int1
      000010 82 00 00 00             87 	int 0x000000 ; int2
      000014 82 00 00 00             88 	int 0x000000 ; int3
      000018 82 00 00 00             89 	int 0x000000 ; int4
      00001C 82 00 00 00             90 	int 0x000000 ; int5
      000020 82 00 00 00             91 	int 0x000000 ; int6
      000024 82 00 00 00             92 	int 0x000000 ; int7
      000028 82 00 00 00             93 	int 0x000000 ; int8
      00002C 82 00 00 00             94 	int 0x000000 ; int9
      000030 82 00 00 00             95 	int 0x000000 ; int10
      000034 82 00 00 00             96 	int 0x000000 ; int11
      000038 82 00 00 00             97 	int 0x000000 ; int12
      00003C 82 00 00 00             98 	int 0x000000 ; int13
      000040 82 00 00 00             99 	int 0x000000 ; int14
      000044 82 00 00 00            100 	int 0x000000 ; int15
      000048 82 00 00 00            101 	int 0x000000 ; int16
      00004C 82 00 00 00            102 	int 0x000000 ; int17
      000050 82 00 00 00            103 	int 0x000000 ; int18
      000054 82 00 00 00            104 	int 0x000000 ; int19
      000058 82 00 00 00            105 	int 0x000000 ; int20
      00005C 82 00 00 00            106 	int 0x000000 ; int21
      000060 82 00 00 00            107 	int 0x000000 ; int22
      000064 82v00u02u28            108 	int _TIM4_OVERLOAD ; int23
                                    109 ;--------------------------------------------------------
                                    110 ; global & static initialisations
                                    111 ;--------------------------------------------------------
                                    112 	.area HOME
                                    113 	.area GSINIT
                                    114 	.area GSFINAL
                                    115 	.area GSINIT
      000000                        116 __sdcc_gs_init_startup:
      000000                        117 __sdcc_init_data:
                                    118 ; stm8_genXINIT() start
      000000 AEr00r00         [ 2]  119 	ldw x, #l_DATA
      000003 27 07            [ 1]  120 	jreq	00002$
      000005                        121 00001$:
      000005 72 4FuFFuFF      [ 1]  122 	clr (s_DATA - 1, x)
      000009 5A               [ 2]  123 	decw x
      00000A 26 F9            [ 1]  124 	jrne	00001$
      00000C                        125 00002$:
      00000C AEr00r00         [ 2]  126 	ldw	x, #l_INITIALIZER
      00000F 27 09            [ 1]  127 	jreq	00004$
      000011                        128 00003$:
      000011 D6uFFuFF         [ 1]  129 	ld	a, (s_INITIALIZER - 1, x)
      000014 D7uFFuFF         [ 1]  130 	ld	(s_INITIALIZED - 1, x), a
      000017 5A               [ 2]  131 	decw	x
      000018 26 F7            [ 1]  132 	jrne	00003$
      00001A                        133 00004$:
                                    134 ; stm8_genXINIT() end
                                    135 	.area GSFINAL
      000000 CCr00r68         [ 2]  136 	jp	__sdcc_program_startup
                                    137 ;--------------------------------------------------------
                                    138 ; Home
                                    139 ;--------------------------------------------------------
                                    140 	.area HOME
                                    141 	.area HOME
      000068                        142 __sdcc_program_startup:
      000068 CCr00r00         [ 2]  143 	jp	_main
                                    144 ;	return from main will return to caller
                                    145 ;--------------------------------------------------------
                                    146 ; code
                                    147 ;--------------------------------------------------------
                                    148 	.area CODE
                                    149 ;	./Src/main.c: 28: int main() {
                                    150 ; genLabel
                                    151 ;	-----------------------------------------
                                    152 ;	 function main
                                    153 ;	-----------------------------------------
                                    154 ;	Register assignment might be sub-optimal.
                                    155 ;	Stack space usage: 0 bytes.
      000000                        156 _main:
                                    157 ;	./Src/main.c: 30: clock_setup();
                                    158 ; genCall
      000000 CDr00rD9         [ 4]  159 	call	_clock_setup
                                    160 ;	./Src/main.c: 31: GPIO_setup();
                                    161 ; genCall
      000003 CDr01r5C         [ 4]  162 	call	_GPIO_setup
                                    163 ;	./Src/main.c: 32: SPI_setup();
                                    164 ; genCall
      000006 CDr01rEF         [ 4]  165 	call	_SPI_setup
                                    166 ;	./Src/main.c: 33: ILI9341_setup();
                                    167 ; genCall
      000009 CDr00r00         [ 4]  168 	call	_ILI9341_setup
                                    169 ;	./Src/main.c: 34: ILI9341_Init_Display();
                                    170 ; genCall
      00000C CDr00r00         [ 4]  171 	call	_ILI9341_Init_Display
                                    172 ;	./Src/main.c: 35: TIM4_setup();
                                    173 ; genCall
      00000F CDr02r0E         [ 4]  174 	call	_TIM4_setup
                                    175 ;	./Src/main.c: 39: __endasm;
                                    176 ;	genInline
      000012 9A               [ 1]  177 	RIM;
                                    178 ;	./Src/main.c: 41: while(1)
                                    179 ; genLabel
      000013                        180 00114$:
                                    181 ;	./Src/main.c: 43: if (GPIO_ReadInputPin(FUNCS_PORT, FUNC1_PIN)) {
                                    182 ; genIPush
      000013 4B 02            [ 1]  183 	push	#0x02
                                    184 ; genIPush
      000015 4B 0F            [ 1]  185 	push	#0x0f
      000017 4B 50            [ 1]  186 	push	#0x50
                                    187 ; genCall
      000019 CDr00r00         [ 4]  188 	call	_GPIO_ReadInputPin
      00001C 5B 03            [ 2]  189 	addw	sp, #3
                                    190 ; genIfx
      00001E 4D               [ 1]  191 	tnz	a
      00001F 26 03            [ 1]  192 	jrne	00143$
      000021 CCr00r2E         [ 2]  193 	jp	00102$
      000024                        194 00143$:
                                    195 ;	./Src/main.c: 44: status.func1 = 1;
                                    196 ; skipping iCode since result will be rematerialized
                                    197 ; skipping iCode since result will be rematerialized
                                    198 ; genPointerSet
      000024 AEr00r00         [ 2]  199 	ldw	x, #_status
      000027 F6               [ 1]  200 	ld	a, (x)
      000028 AA 04            [ 1]  201 	or	a, #0x04
      00002A F7               [ 1]  202 	ld	(x), a
                                    203 ; genGoto
      00002B CCr00r35         [ 2]  204 	jp	00103$
                                    205 ; genLabel
      00002E                        206 00102$:
                                    207 ;	./Src/main.c: 46: status.func1 = 0;
                                    208 ; skipping iCode since result will be rematerialized
                                    209 ; skipping iCode since result will be rematerialized
                                    210 ; genPointerSet
      00002E AEr00r00         [ 2]  211 	ldw	x, #_status
      000031 A6 FB            [ 1]  212 	ld	a, #0xfb
      000033 F4               [ 1]  213 	and	a, (x)
      000034 F7               [ 1]  214 	ld	(x), a
                                    215 ; genLabel
      000035                        216 00103$:
                                    217 ;	./Src/main.c: 49: if (GPIO_ReadInputPin(FUNCS_PORT, FUNC2_PIN)) {
                                    218 ; genIPush
      000035 4B 04            [ 1]  219 	push	#0x04
                                    220 ; genIPush
      000037 4B 0F            [ 1]  221 	push	#0x0f
      000039 4B 50            [ 1]  222 	push	#0x50
                                    223 ; genCall
      00003B CDr00r00         [ 4]  224 	call	_GPIO_ReadInputPin
      00003E 5B 03            [ 2]  225 	addw	sp, #3
                                    226 ; genIfx
      000040 4D               [ 1]  227 	tnz	a
      000041 26 03            [ 1]  228 	jrne	00144$
      000043 CCr00r50         [ 2]  229 	jp	00105$
      000046                        230 00144$:
                                    231 ;	./Src/main.c: 50: status.func2 = 1;
                                    232 ; skipping iCode since result will be rematerialized
                                    233 ; skipping iCode since result will be rematerialized
                                    234 ; genPointerSet
      000046 AEr00r00         [ 2]  235 	ldw	x, #_status
      000049 F6               [ 1]  236 	ld	a, (x)
      00004A AA 08            [ 1]  237 	or	a, #0x08
      00004C F7               [ 1]  238 	ld	(x), a
                                    239 ; genGoto
      00004D CCr00r57         [ 2]  240 	jp	00106$
                                    241 ; genLabel
      000050                        242 00105$:
                                    243 ;	./Src/main.c: 52: status.func2 = 0;
                                    244 ; skipping iCode since result will be rematerialized
                                    245 ; skipping iCode since result will be rematerialized
                                    246 ; genPointerSet
      000050 AEr00r00         [ 2]  247 	ldw	x, #_status
      000053 A6 F7            [ 1]  248 	ld	a, #0xf7
      000055 F4               [ 1]  249 	and	a, (x)
      000056 F7               [ 1]  250 	ld	(x), a
                                    251 ; genLabel
      000057                        252 00106$:
                                    253 ;	./Src/main.c: 55: if (GPIO_ReadInputPin(SELS_PORT, SEL1_PIN)) {
                                    254 ; genIPush
      000057 4B 20            [ 1]  255 	push	#0x20
                                    256 ; genIPush
      000059 4B 0F            [ 1]  257 	push	#0x0f
      00005B 4B 50            [ 1]  258 	push	#0x50
                                    259 ; genCall
      00005D CDr00r00         [ 4]  260 	call	_GPIO_ReadInputPin
      000060 5B 03            [ 2]  261 	addw	sp, #3
                                    262 ; genIfx
      000062 4D               [ 1]  263 	tnz	a
      000063 26 03            [ 1]  264 	jrne	00145$
      000065 CCr00r72         [ 2]  265 	jp	00108$
      000068                        266 00145$:
                                    267 ;	./Src/main.c: 56: status.sel1 = 1;
                                    268 ; skipping iCode since result will be rematerialized
                                    269 ; skipping iCode since result will be rematerialized
                                    270 ; genPointerSet
      000068 AEr00r00         [ 2]  271 	ldw	x, #_status
      00006B F6               [ 1]  272 	ld	a, (x)
      00006C AA 01            [ 1]  273 	or	a, #0x01
      00006E F7               [ 1]  274 	ld	(x), a
                                    275 ; genGoto
      00006F CCr00r79         [ 2]  276 	jp	00109$
                                    277 ; genLabel
      000072                        278 00108$:
                                    279 ;	./Src/main.c: 58: status.sel1 = 0;
                                    280 ; skipping iCode since result will be rematerialized
                                    281 ; skipping iCode since result will be rematerialized
                                    282 ; genPointerSet
      000072 AEr00r00         [ 2]  283 	ldw	x, #_status
      000075 A6 FE            [ 1]  284 	ld	a, #0xfe
      000077 F4               [ 1]  285 	and	a, (x)
      000078 F7               [ 1]  286 	ld	(x), a
                                    287 ; genLabel
      000079                        288 00109$:
                                    289 ;	./Src/main.c: 61: if (GPIO_ReadInputPin(SELS_PORT, SEL2_PIN)) {
                                    290 ; genIPush
      000079 4B 40            [ 1]  291 	push	#0x40
                                    292 ; genIPush
      00007B 4B 0F            [ 1]  293 	push	#0x0f
      00007D 4B 50            [ 1]  294 	push	#0x50
                                    295 ; genCall
      00007F CDr00r00         [ 4]  296 	call	_GPIO_ReadInputPin
      000082 5B 03            [ 2]  297 	addw	sp, #3
                                    298 ; genIfx
      000084 4D               [ 1]  299 	tnz	a
      000085 26 03            [ 1]  300 	jrne	00146$
      000087 CCr00r94         [ 2]  301 	jp	00111$
      00008A                        302 00146$:
                                    303 ;	./Src/main.c: 62: status.sel2 = 1;
                                    304 ; skipping iCode since result will be rematerialized
                                    305 ; skipping iCode since result will be rematerialized
                                    306 ; genPointerSet
      00008A AEr00r00         [ 2]  307 	ldw	x, #_status
      00008D F6               [ 1]  308 	ld	a, (x)
      00008E AA 02            [ 1]  309 	or	a, #0x02
      000090 F7               [ 1]  310 	ld	(x), a
                                    311 ; genGoto
      000091 CCr00r9B         [ 2]  312 	jp	00112$
                                    313 ; genLabel
      000094                        314 00111$:
                                    315 ;	./Src/main.c: 64: status.sel2 = 0;
                                    316 ; skipping iCode since result will be rematerialized
                                    317 ; skipping iCode since result will be rematerialized
                                    318 ; genPointerSet
      000094 AEr00r00         [ 2]  319 	ldw	x, #_status
      000097 A6 FD            [ 1]  320 	ld	a, #0xfd
      000099 F4               [ 1]  321 	and	a, (x)
      00009A F7               [ 1]  322 	ld	(x), a
                                    323 ; genLabel
      00009B                        324 00112$:
                                    325 ;	./Src/main.c: 70: ILI9341_Write_Command(0xFF);
                                    326 ; genIPush
      00009B 4B FF            [ 1]  327 	push	#0xff
      00009D 4B 00            [ 1]  328 	push	#0x00
                                    329 ; genCall
      00009F CDr00r00         [ 4]  330 	call	_ILI9341_Write_Command
      0000A2 85               [ 2]  331 	popw	x
                                    332 ;	./Src/main.c: 71: ILI9341_Write_Data(0xFF);
                                    333 ; genIPush
      0000A3 4B FF            [ 1]  334 	push	#0xff
      0000A5 4B 00            [ 1]  335 	push	#0x00
                                    336 ; genCall
      0000A7 CDr00r00         [ 4]  337 	call	_ILI9341_Write_Data
      0000AA 85               [ 2]  338 	popw	x
                                    339 ; genGoto
      0000AB CCr00r13         [ 2]  340 	jp	00114$
                                    341 ; genLabel
      0000AE                        342 00116$:
                                    343 ;	./Src/main.c: 74: }
                                    344 ; genEndFunction
      0000AE 81               [ 4]  345 	ret
                                    346 ;	./Src/main.c: 76: void delay(long n) {
                                    347 ; genLabel
                                    348 ;	-----------------------------------------
                                    349 ;	 function delay
                                    350 ;	-----------------------------------------
                                    351 ;	Register assignment might be sub-optimal.
                                    352 ;	Stack space usage: 4 bytes.
      0000AF                        353 _delay:
      0000AF 52 04            [ 2]  354 	sub	sp, #4
                                    355 ;	./Src/main.c: 77: while (n--> 0);
                                    356 ; genAssign
      0000B1 16 09            [ 2]  357 	ldw	y, (0x09, sp)
      0000B3 1E 07            [ 2]  358 	ldw	x, (0x07, sp)
                                    359 ; genLabel
      0000B5                        360 00101$:
                                    361 ; genAssign
      0000B5 17 03            [ 2]  362 	ldw	(0x03, sp), y
      0000B7 1F 01            [ 2]  363 	ldw	(0x01, sp), x
                                    364 ; genMinus
      0000B9 72 A2 00 01      [ 2]  365 	subw	y, #0x0001
      0000BD 9F               [ 1]  366 	ld	a, xl
      0000BE A2 00            [ 1]  367 	sbc	a, #0x00
      0000C0 97               [ 1]  368 	ld	xl, a
      0000C1 9E               [ 1]  369 	ld	a, xh
      0000C2 A2 00            [ 1]  370 	sbc	a, #0x00
      0000C4 95               [ 1]  371 	ld	xh, a
                                    372 ; genCmp
                                    373 ; genCmpTop
      0000C5 4F               [ 1]  374 	clr	a
      0000C6 11 04            [ 1]  375 	cp	a, (0x04, sp)
      0000C8 4F               [ 1]  376 	clr	a
      0000C9 12 03            [ 1]  377 	sbc	a, (0x03, sp)
      0000CB 4F               [ 1]  378 	clr	a
      0000CC 12 02            [ 1]  379 	sbc	a, (0x02, sp)
      0000CE 4F               [ 1]  380 	clr	a
      0000CF 12 01            [ 1]  381 	sbc	a, (0x01, sp)
      0000D1 2E 03            [ 1]  382 	jrsge	00112$
      0000D3 CCr00rB5         [ 2]  383 	jp	00101$
      0000D6                        384 00112$:
                                    385 ; skipping generated iCode
                                    386 ; genLabel
      0000D6                        387 00104$:
                                    388 ;	./Src/main.c: 78: }
                                    389 ; genEndFunction
      0000D6 5B 04            [ 2]  390 	addw	sp, #4
      0000D8 81               [ 4]  391 	ret
                                    392 ;	./Src/main.c: 80: void clock_setup() {
                                    393 ; genLabel
                                    394 ;	-----------------------------------------
                                    395 ;	 function clock_setup
                                    396 ;	-----------------------------------------
                                    397 ;	Register assignment is optimal.
                                    398 ;	Stack space usage: 0 bytes.
      0000D9                        399 _clock_setup:
                                    400 ;	./Src/main.c: 81: CLK_DeInit();
                                    401 ; genCall
      0000D9 CDr00r00         [ 4]  402 	call	_CLK_DeInit
                                    403 ;	./Src/main.c: 82: CLK_HSECmd(DISABLE);
                                    404 ; genIPush
      0000DC 4B 00            [ 1]  405 	push	#0x00
                                    406 ; genCall
      0000DE CDr00r00         [ 4]  407 	call	_CLK_HSECmd
      0000E1 84               [ 1]  408 	pop	a
                                    409 ;	./Src/main.c: 83: CLK_LSICmd(DISABLE);
                                    410 ; genIPush
      0000E2 4B 00            [ 1]  411 	push	#0x00
                                    412 ; genCall
      0000E4 CDr00r00         [ 4]  413 	call	_CLK_LSICmd
      0000E7 84               [ 1]  414 	pop	a
                                    415 ;	./Src/main.c: 84: CLK_HSICmd(ENABLE); 
                                    416 ; genIPush
      0000E8 4B 01            [ 1]  417 	push	#0x01
                                    418 ; genCall
      0000EA CDr00r00         [ 4]  419 	call	_CLK_HSICmd
      0000ED 84               [ 1]  420 	pop	a
                                    421 ;	./Src/main.c: 85: while(CLK_GetFlagStatus(CLK_FLAG_HSIRDY) == FALSE);
                                    422 ; genLabel
      0000EE                        423 00101$:
                                    424 ; genIPush
      0000EE 4B 02            [ 1]  425 	push	#0x02
      0000F0 4B 01            [ 1]  426 	push	#0x01
                                    427 ; genCall
      0000F2 CDr00r00         [ 4]  428 	call	_CLK_GetFlagStatus
      0000F5 85               [ 2]  429 	popw	x
                                    430 ; genIfx
      0000F6 4D               [ 1]  431 	tnz	a
      0000F7 26 03            [ 1]  432 	jrne	00116$
      0000F9 CCr00rEE         [ 2]  433 	jp	00101$
      0000FC                        434 00116$:
                                    435 ;	./Src/main.c: 86: CLK_ClockSwitchCmd(ENABLE);
                                    436 ; genIPush
      0000FC 4B 01            [ 1]  437 	push	#0x01
                                    438 ; genCall
      0000FE CDr00r00         [ 4]  439 	call	_CLK_ClockSwitchCmd
      000101 84               [ 1]  440 	pop	a
                                    441 ;	./Src/main.c: 87: CLK_HSIPrescalerConfig(CLK_PRESCALER_HSIDIV8);
                                    442 ; genIPush
      000102 4B 18            [ 1]  443 	push	#0x18
                                    444 ; genCall
      000104 CDr00r00         [ 4]  445 	call	_CLK_HSIPrescalerConfig
      000107 84               [ 1]  446 	pop	a
                                    447 ;	./Src/main.c: 88: CLK_SYSCLKConfig(CLK_PRESCALER_CPUDIV1);
                                    448 ; genIPush
      000108 4B 80            [ 1]  449 	push	#0x80
                                    450 ; genCall
      00010A CDr00r00         [ 4]  451 	call	_CLK_SYSCLKConfig
      00010D 84               [ 1]  452 	pop	a
                                    453 ;	./Src/main.c: 89: CLK_ClockSwitchConfig(CLK_SWITCHMODE_AUTO, CLK_SOURCE_HSI, DISABLE, CLK_CURRENTCLOCKSTATE_ENABLE);
                                    454 ; genIPush
      00010E 4B 01            [ 1]  455 	push	#0x01
                                    456 ; genIPush
      000110 4B 00            [ 1]  457 	push	#0x00
                                    458 ; genIPush
      000112 4B E1            [ 1]  459 	push	#0xe1
                                    460 ; genIPush
      000114 4B 01            [ 1]  461 	push	#0x01
                                    462 ; genCall
      000116 CDr00r00         [ 4]  463 	call	_CLK_ClockSwitchConfig
      000119 5B 04            [ 2]  464 	addw	sp, #4
                                    465 ;	./Src/main.c: 90: CLK_PeripheralClockConfig(CLK_PERIPHERAL_SPI, ENABLE);
                                    466 ; genIPush
      00011B 4B 01            [ 1]  467 	push	#0x01
                                    468 ; genIPush
      00011D 4B 01            [ 1]  469 	push	#0x01
                                    470 ; genCall
      00011F CDr00r00         [ 4]  471 	call	_CLK_PeripheralClockConfig
      000122 85               [ 2]  472 	popw	x
                                    473 ;	./Src/main.c: 91: CLK_PeripheralClockConfig(CLK_PERIPHERAL_I2C, DISABLE);
                                    474 ; genIPush
      000123 4B 00            [ 1]  475 	push	#0x00
                                    476 ; genIPush
      000125 4B 00            [ 1]  477 	push	#0x00
                                    478 ; genCall
      000127 CDr00r00         [ 4]  479 	call	_CLK_PeripheralClockConfig
      00012A 85               [ 2]  480 	popw	x
                                    481 ;	./Src/main.c: 92: CLK_PeripheralClockConfig(CLK_PERIPHERAL_ADC, DISABLE);
                                    482 ; genIPush
      00012B 4B 00            [ 1]  483 	push	#0x00
                                    484 ; genIPush
      00012D 4B 13            [ 1]  485 	push	#0x13
                                    486 ; genCall
      00012F CDr00r00         [ 4]  487 	call	_CLK_PeripheralClockConfig
      000132 85               [ 2]  488 	popw	x
                                    489 ;	./Src/main.c: 93: CLK_PeripheralClockConfig(CLK_PERIPHERAL_AWU, DISABLE);
                                    490 ; genIPush
      000133 4B 00            [ 1]  491 	push	#0x00
                                    492 ; genIPush
      000135 4B 12            [ 1]  493 	push	#0x12
                                    494 ; genCall
      000137 CDr00r00         [ 4]  495 	call	_CLK_PeripheralClockConfig
      00013A 85               [ 2]  496 	popw	x
                                    497 ;	./Src/main.c: 94: CLK_PeripheralClockConfig(CLK_PERIPHERAL_UART1, DISABLE);
                                    498 ; genIPush
      00013B 4B 00            [ 1]  499 	push	#0x00
                                    500 ; genIPush
      00013D 4B 03            [ 1]  501 	push	#0x03
                                    502 ; genCall
      00013F CDr00r00         [ 4]  503 	call	_CLK_PeripheralClockConfig
      000142 85               [ 2]  504 	popw	x
                                    505 ;	./Src/main.c: 95: CLK_PeripheralClockConfig(CLK_PERIPHERAL_TIMER1, DISABLE);
                                    506 ; genIPush
      000143 4B 00            [ 1]  507 	push	#0x00
                                    508 ; genIPush
      000145 4B 07            [ 1]  509 	push	#0x07
                                    510 ; genCall
      000147 CDr00r00         [ 4]  511 	call	_CLK_PeripheralClockConfig
      00014A 85               [ 2]  512 	popw	x
                                    513 ;	./Src/main.c: 96: CLK_PeripheralClockConfig(CLK_PERIPHERAL_TIMER2, DISABLE);
                                    514 ; genIPush
      00014B 4B 00            [ 1]  515 	push	#0x00
                                    516 ; genIPush
      00014D 4B 05            [ 1]  517 	push	#0x05
                                    518 ; genCall
      00014F CDr00r00         [ 4]  519 	call	_CLK_PeripheralClockConfig
      000152 85               [ 2]  520 	popw	x
                                    521 ;	./Src/main.c: 97: CLK_PeripheralClockConfig(CLK_PERIPHERAL_TIMER4, ENABLE);
                                    522 ; genIPush
      000153 4B 01            [ 1]  523 	push	#0x01
                                    524 ; genIPush
      000155 4B 04            [ 1]  525 	push	#0x04
                                    526 ; genCall
      000157 CDr00r00         [ 4]  527 	call	_CLK_PeripheralClockConfig
      00015A 85               [ 2]  528 	popw	x
                                    529 ; genLabel
      00015B                        530 00104$:
                                    531 ;	./Src/main.c: 98: }
                                    532 ; genEndFunction
      00015B 81               [ 4]  533 	ret
                                    534 ;	./Src/main.c: 100: void GPIO_setup() {
                                    535 ; genLabel
                                    536 ;	-----------------------------------------
                                    537 ;	 function GPIO_setup
                                    538 ;	-----------------------------------------
                                    539 ;	Register assignment is optimal.
                                    540 ;	Stack space usage: 0 bytes.
      00015C                        541 _GPIO_setup:
                                    542 ;	./Src/main.c: 101: GPIO_DeInit(GPIOC);
                                    543 ; genIPush
      00015C 4B 0A            [ 1]  544 	push	#0x0a
      00015E 4B 50            [ 1]  545 	push	#0x50
                                    546 ; genCall
      000160 CDr00r00         [ 4]  547 	call	_GPIO_DeInit
      000163 85               [ 2]  548 	popw	x
                                    549 ;	./Src/main.c: 102: GPIO_DeInit(GPIOD);
                                    550 ; genIPush
      000164 4B 0F            [ 1]  551 	push	#0x0f
      000166 4B 50            [ 1]  552 	push	#0x50
                                    553 ; genCall
      000168 CDr00r00         [ 4]  554 	call	_GPIO_DeInit
      00016B 85               [ 2]  555 	popw	x
                                    556 ;	./Src/main.c: 103: GPIO_Init(GPIOD, GPIO_PIN_3, GPIO_MODE_OUT_PP_LOW_FAST);
                                    557 ; genIPush
      00016C 4B E0            [ 1]  558 	push	#0xe0
                                    559 ; genIPush
      00016E 4B 08            [ 1]  560 	push	#0x08
                                    561 ; genIPush
      000170 4B 0F            [ 1]  562 	push	#0x0f
      000172 4B 50            [ 1]  563 	push	#0x50
                                    564 ; genCall
      000174 CDr00r00         [ 4]  565 	call	_GPIO_Init
      000177 5B 04            [ 2]  566 	addw	sp, #4
                                    567 ;	./Src/main.c: 104: GPIO_Init(SPI_Port, ((GPIO_Pin_TypeDef) SPI_SCK_PIN | SPI_MOSI_PIN), GPIO_MODE_OUT_PP_HIGH_FAST);
                                    568 ; genIPush
      000179 4B F0            [ 1]  569 	push	#0xf0
                                    570 ; genIPush
      00017B 4B 60            [ 1]  571 	push	#0x60
                                    572 ; genIPush
      00017D 4B 0A            [ 1]  573 	push	#0x0a
      00017F 4B 50            [ 1]  574 	push	#0x50
                                    575 ; genCall
      000181 CDr00r00         [ 4]  576 	call	_GPIO_Init
      000184 5B 04            [ 2]  577 	addw	sp, #4
                                    578 ;	./Src/main.c: 107: GPIO_Init(GPIOC, GPIO_PIN_3, GPIO_MODE_IN_FL_NO_IT);
                                    579 ; genIPush
      000186 4B 00            [ 1]  580 	push	#0x00
                                    581 ; genIPush
      000188 4B 08            [ 1]  582 	push	#0x08
                                    583 ; genIPush
      00018A 4B 0A            [ 1]  584 	push	#0x0a
      00018C 4B 50            [ 1]  585 	push	#0x50
                                    586 ; genCall
      00018E CDr00r00         [ 4]  587 	call	_GPIO_Init
      000191 5B 04            [ 2]  588 	addw	sp, #4
                                    589 ;	./Src/main.c: 114: GPIO_Init(GPIOC, GPIO_PIN_7, GPIO_MODE_OUT_PP_LOW_FAST);
                                    590 ; genIPush
      000193 4B E0            [ 1]  591 	push	#0xe0
                                    592 ; genIPush
      000195 4B 80            [ 1]  593 	push	#0x80
                                    594 ; genIPush
      000197 4B 0A            [ 1]  595 	push	#0x0a
      000199 4B 50            [ 1]  596 	push	#0x50
                                    597 ; genCall
      00019B CDr00r00         [ 4]  598 	call	_GPIO_Init
      00019E 5B 04            [ 2]  599 	addw	sp, #4
                                    600 ;	./Src/main.c: 120: GPIO_Init(GPIOD, GPIO_PIN_1, GPIO_MODE_IN_FL_NO_IT);
                                    601 ; genIPush
      0001A0 4B 00            [ 1]  602 	push	#0x00
                                    603 ; genIPush
      0001A2 4B 02            [ 1]  604 	push	#0x02
                                    605 ; genIPush
      0001A4 4B 0F            [ 1]  606 	push	#0x0f
      0001A6 4B 50            [ 1]  607 	push	#0x50
                                    608 ; genCall
      0001A8 CDr00r00         [ 4]  609 	call	_GPIO_Init
      0001AB 5B 04            [ 2]  610 	addw	sp, #4
                                    611 ;	./Src/main.c: 126: GPIO_Init(GPIOD, GPIO_PIN_2, GPIO_MODE_IN_FL_NO_IT);
                                    612 ; genIPush
      0001AD 4B 00            [ 1]  613 	push	#0x00
                                    614 ; genIPush
      0001AF 4B 04            [ 1]  615 	push	#0x04
                                    616 ; genIPush
      0001B1 4B 0F            [ 1]  617 	push	#0x0f
      0001B3 4B 50            [ 1]  618 	push	#0x50
                                    619 ; genCall
      0001B5 CDr00r00         [ 4]  620 	call	_GPIO_Init
      0001B8 5B 04            [ 2]  621 	addw	sp, #4
                                    622 ;	./Src/main.c: 133: GPIO_Init(GPIOD, GPIO_PIN_3, GPIO_MODE_OUT_PP_LOW_FAST);
                                    623 ; genIPush
      0001BA 4B E0            [ 1]  624 	push	#0xe0
                                    625 ; genIPush
      0001BC 4B 08            [ 1]  626 	push	#0x08
                                    627 ; genIPush
      0001BE 4B 0F            [ 1]  628 	push	#0x0f
      0001C0 4B 50            [ 1]  629 	push	#0x50
                                    630 ; genCall
      0001C2 CDr00r00         [ 4]  631 	call	_GPIO_Init
      0001C5 5B 04            [ 2]  632 	addw	sp, #4
                                    633 ;	./Src/main.c: 139: GPIO_Init(GPIOD, GPIO_PIN_4, GPIO_MODE_OUT_PP_LOW_FAST);
                                    634 ; genIPush
      0001C7 4B E0            [ 1]  635 	push	#0xe0
                                    636 ; genIPush
      0001C9 4B 10            [ 1]  637 	push	#0x10
                                    638 ; genIPush
      0001CB 4B 0F            [ 1]  639 	push	#0x0f
      0001CD 4B 50            [ 1]  640 	push	#0x50
                                    641 ; genCall
      0001CF CDr00r00         [ 4]  642 	call	_GPIO_Init
      0001D2 5B 04            [ 2]  643 	addw	sp, #4
                                    644 ;	./Src/main.c: 145: GPIO_Init(GPIOD, GPIO_PIN_5, GPIO_MODE_IN_FL_NO_IT);
                                    645 ; genIPush
      0001D4 4B 00            [ 1]  646 	push	#0x00
                                    647 ; genIPush
      0001D6 4B 20            [ 1]  648 	push	#0x20
                                    649 ; genIPush
      0001D8 4B 0F            [ 1]  650 	push	#0x0f
      0001DA 4B 50            [ 1]  651 	push	#0x50
                                    652 ; genCall
      0001DC CDr00r00         [ 4]  653 	call	_GPIO_Init
      0001DF 5B 04            [ 2]  654 	addw	sp, #4
                                    655 ;	./Src/main.c: 151: GPIO_Init(GPIOD, GPIO_PIN_6, GPIO_MODE_IN_FL_NO_IT);
                                    656 ; genIPush
      0001E1 4B 00            [ 1]  657 	push	#0x00
                                    658 ; genIPush
      0001E3 4B 40            [ 1]  659 	push	#0x40
                                    660 ; genIPush
      0001E5 4B 0F            [ 1]  661 	push	#0x0f
      0001E7 4B 50            [ 1]  662 	push	#0x50
                                    663 ; genCall
      0001E9 CDr00r00         [ 4]  664 	call	_GPIO_Init
      0001EC 5B 04            [ 2]  665 	addw	sp, #4
                                    666 ; genLabel
      0001EE                        667 00101$:
                                    668 ;	./Src/main.c: 153: }
                                    669 ; genEndFunction
      0001EE 81               [ 4]  670 	ret
                                    671 ;	./Src/main.c: 155: void SPI_setup(void) {
                                    672 ; genLabel
                                    673 ;	-----------------------------------------
                                    674 ;	 function SPI_setup
                                    675 ;	-----------------------------------------
                                    676 ;	Register assignment is optimal.
                                    677 ;	Stack space usage: 0 bytes.
      0001EF                        678 _SPI_setup:
                                    679 ;	./Src/main.c: 156: SPI_DeInit();
                                    680 ; genCall
      0001EF CDr00r00         [ 4]  681 	call	_SPI_DeInit
                                    682 ;	./Src/main.c: 157: SPI_Init(SPI_FIRSTBIT_MSB,
                                    683 ; genIPush
      0001F2 4B 00            [ 1]  684 	push	#0x00
                                    685 ; genIPush
      0001F4 4B 02            [ 1]  686 	push	#0x02
                                    687 ; genIPush
      0001F6 4B C0            [ 1]  688 	push	#0xc0
                                    689 ; genIPush
      0001F8 4B 00            [ 1]  690 	push	#0x00
                                    691 ; genIPush
      0001FA 4B 02            [ 1]  692 	push	#0x02
                                    693 ; genIPush
      0001FC 4B 04            [ 1]  694 	push	#0x04
                                    695 ; genIPush
      0001FE 4B 10            [ 1]  696 	push	#0x10
                                    697 ; genIPush
      000200 4B 00            [ 1]  698 	push	#0x00
                                    699 ; genCall
      000202 CDr00r00         [ 4]  700 	call	_SPI_Init
      000205 5B 08            [ 2]  701 	addw	sp, #8
                                    702 ;	./Src/main.c: 165: SPI_Cmd(ENABLE);
                                    703 ; genIPush
      000207 4B 01            [ 1]  704 	push	#0x01
                                    705 ; genCall
      000209 CDr00r00         [ 4]  706 	call	_SPI_Cmd
      00020C 84               [ 1]  707 	pop	a
                                    708 ; genLabel
      00020D                        709 00101$:
                                    710 ;	./Src/main.c: 166: }
                                    711 ; genEndFunction
      00020D 81               [ 4]  712 	ret
                                    713 ;	./Src/main.c: 168: void TIM4_setup() {
                                    714 ; genLabel
                                    715 ;	-----------------------------------------
                                    716 ;	 function TIM4_setup
                                    717 ;	-----------------------------------------
                                    718 ;	Register assignment is optimal.
                                    719 ;	Stack space usage: 0 bytes.
      00020E                        720 _TIM4_setup:
                                    721 ;	./Src/main.c: 169: TIM4_DeInit();
                                    722 ; genCall
      00020E CDr00r00         [ 4]  723 	call	_TIM4_DeInit
                                    724 ;	./Src/main.c: 170: TIM4_TimeBaseInit(TIM4_PRESCALER_128, 0xFF);
                                    725 ; genIPush
      000211 4B FF            [ 1]  726 	push	#0xff
                                    727 ; genIPush
      000213 4B 07            [ 1]  728 	push	#0x07
                                    729 ; genCall
      000215 CDr00r00         [ 4]  730 	call	_TIM4_TimeBaseInit
      000218 85               [ 2]  731 	popw	x
                                    732 ;	./Src/main.c: 171: TIM4_ITConfig(TIM4_IT_UPDATE, ENABLE);
                                    733 ; genIPush
      000219 4B 01            [ 1]  734 	push	#0x01
                                    735 ; genIPush
      00021B 4B 01            [ 1]  736 	push	#0x01
                                    737 ; genCall
      00021D CDr00r00         [ 4]  738 	call	_TIM4_ITConfig
      000220 85               [ 2]  739 	popw	x
                                    740 ;	./Src/main.c: 172: TIM4_Cmd(ENABLE);
                                    741 ; genIPush
      000221 4B 01            [ 1]  742 	push	#0x01
                                    743 ; genCall
      000223 CDr00r00         [ 4]  744 	call	_TIM4_Cmd
      000226 84               [ 1]  745 	pop	a
                                    746 ; genLabel
      000227                        747 00101$:
                                    748 ;	./Src/main.c: 173: }
                                    749 ; genEndFunction
      000227 81               [ 4]  750 	ret
                                    751 ;	./Src/main.c: 175: void TIM4_OVERLOAD(void) __interrupt(23) {
                                    752 ; genLabel
                                    753 ;	-----------------------------------------
                                    754 ;	 function TIM4_OVERLOAD
                                    755 ;	-----------------------------------------
                                    756 ;	Register assignment is optimal.
                                    757 ;	Stack space usage: 0 bytes.
      000228                        758 _TIM4_OVERLOAD:
                                    759 ;	Reset bit 6 of reg CC. Hardware bug workaround.
      000228 62               [ 2]  760 	div	x, a
                                    761 ;	./Src/main.c: 176: TIM4_ClearITPendingBit(TIM4_FLAG_UPDATE);  
                                    762 ; genIPush
      000229 4B 01            [ 1]  763 	push	#0x01
                                    764 ; genCall
      00022B CDr00r00         [ 4]  765 	call	_TIM4_ClearITPendingBit
      00022E 84               [ 1]  766 	pop	a
                                    767 ;	./Src/main.c: 178: if (!count) {
                                    768 ; genIfx
      00022F CEu00u01         [ 2]  769 	ldw	x, _count+0
      000232 27 03            [ 1]  770 	jreq	00111$
      000234 CCr02r4B         [ 2]  771 	jp	00102$
      000237                        772 00111$:
                                    773 ;	./Src/main.c: 179: GPIO_WriteReverse(GPIOD, GPIO_PIN_3);
                                    774 ; genIPush
      000237 4B 08            [ 1]  775 	push	#0x08
                                    776 ; genIPush
      000239 4B 0F            [ 1]  777 	push	#0x0f
      00023B 4B 50            [ 1]  778 	push	#0x50
                                    779 ; genCall
      00023D CDr00r00         [ 4]  780 	call	_GPIO_WriteReverse
      000240 5B 03            [ 2]  781 	addw	sp, #3
                                    782 ;	./Src/main.c: 180: count=70;
                                    783 ; genAssign
      000242 AE 00 46         [ 2]  784 	ldw	x, #0x0046
      000245 CFu00u01         [ 2]  785 	ldw	_count+0, x
                                    786 ; genGoto
      000248 CCr02r52         [ 2]  787 	jp	00104$
                                    788 ; genLabel
      00024B                        789 00102$:
                                    790 ;	./Src/main.c: 182: count--;
                                    791 ; genMinus
      00024B CEu00u01         [ 2]  792 	ldw	x, _count+0
      00024E 5A               [ 2]  793 	decw	x
                                    794 ; genAssign
      00024F CFu00u01         [ 2]  795 	ldw	_count+0, x
                                    796 ; genLabel
      000252                        797 00104$:
                                    798 ;	./Src/main.c: 184: }
                                    799 ; genEndFunction
      000252 80               [11]  800 	iret
                                    801 	.area CODE
                                    802 	.area CONST
                                    803 	.area INITIALIZER
      000000                        804 __xinit__status:
      000000 2F                     805 	.db 0x2f
      000001                        806 __xinit__count:
      000001 00 46                  807 	.dw #0x0046
                                    808 	.area CABS (ABS)
